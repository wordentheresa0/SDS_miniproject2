---
title: "MP2"
format: pdf
editor: visual
---

```{r}
library(tidyverse)
library(polite)
library(gutenbergr)
library(htmltools)
library(rvest)
```


```{r}
#Scrape the top 100 books from the past 30 days
get_gutenberg_top100 <- function() {
  if (robotstxt::paths_allowed("https://www.gutenberg.org/browse/scores/top#books-last30") == "TRUE") {
    gutenberg_page <- read_html("https://www.gutenberg.org/browse/scores/top#books-last30")
    books_last30 <- html_nodes(gutenberg_page, "#books-last30+ ol li")
    books_last30_text <- html_text(books_last30)
    books_last30_tbl <- tibble(
  title = gsub(" by.*", "", books_last30_text),
  author = gsub(".* by ", "", books_last30_text),
  popularity = seq.int(1,100)
)
    
  df_books30 <<- books_last30_tbl
  }
}

get_gutenberg_top100()
```
```{r}
top_100_books <- gutenberg_works() |>
  filter(title %in% df_books30$title)

#top_100_text <- gutenberg_download(top_100_books$gutenberg_id, meta_fields = c("title", "author"))

#top_100_data <- top_100_text |>
#  mutate(text = na_if(text, "")) |>
#  na.omit() |>
#  group_by(title) |>
#  mutate(line_num = row_number()) |>
#  ungroup()
```

```{r}
book_ids <- top_100_books$gutenberg_id
books_with_warnings <- list()
books_with_warningsb <- list()
top_100_data <- data.frame()

download_book <- function(book_id, mirror = "http://aleph.gutenberg.org") {
  tryCatch(
    {
      data <- gutenberg_download(book_id, meta_fields = c("title", "author"), mirror = mirror)
      top_100_data <<- bind_rows(top_100_data, data)
    },
    warning = function(w) {
      books_with_warnings <<- c(books_with_warnings, book_id)
      message("Warning for book ID: ", book_id) 
      return(NULL)
    }
  )
}

book_data <- lapply(book_ids, download_book)

print("Books with warnings:")
print(books_with_warnings)

top_100_data <- top_100_data |>
  mutate(text = na_if(text, "")) |> #changing empty lines to NA
  na.omit() |> #removing those empty (NA) lines
  group_by(title) |>
  mutate(line_num = row_number()) |> #adding line number (starts at 1 for each book)
  ungroup()


#print(top_100_data)
#Note: this dataset is way to long to render to pdf. 

#For viewing
top_100_line_1 <- top_100_data |>
  filter(line_num == 1)
head(top_100_line_1)
```


